import numpy as np
import itertools
from scipy import io as sio
import matplotlib.pyplot as plt

filename1 = '   '
filename2 = '   '

mat_data1 = sio.loadmat(filename1 + '.mat', struct_as_record=False, squeeze_me=True)
mat_data2 = sio.loadmat(filename2 + '.mat', struct_as_record=False, squeeze_me=True)

cc_struct1 = mat_data1['cc_struct']
cc_struct2 = mat_data2['cc_struct']

data_raw1 = cc_struct1.data.cc_data
data_raw2 = cc_struct2.data.cc_data

strt_thl = cc_struct1.params.startThresh
num_thresh = data_raw1.shape[0]

threshold = np.zeros((864, num_thresh - 4))
counts_1 = np.zeros((864, num_thresh - 4))
counts_2 = np.zeros((864, num_thresh - 4))

for thl, row, col in itertools.product(range(num_thresh - 4), range(24), range(36)):
    px = 36 * row + col if row % 2 == 0 else 36 * row + 35 - col
    threshold[px, thl] = thl + strt_thl
    counts_1[px, thl] = (
        data_raw1[thl + 3][1][row][col]
        + data_raw1[thl + 2][2][row][col]
        + data_raw1[thl + 1][3][row][col]
        + data_raw1[thl][4][row][col]
    )
    counts_2[px, thl] = (
        data_raw2[thl + 3][1][row][col]
        + data_raw2[thl + 2][2][row][col]
        + data_raw2[thl + 1][3][row][col]
        + data_raw2[thl][4][row][col]
    )

for row, col in itertools.product(range(24), range(36)):
    pixel = 36 * row + col if row % 2 == 0 else 36 * row + 35 - col
    fig = plt.figure(pixel)
    plt.plot(threshold[pixel], counts_1[pixel], 'r--', label='2023_06_12__07_37_22')
    plt.plot(threshold[pixel], counts_2[pixel], 'b-', label='2023_06_12__15_36_04')
    plt.xlabel('Threshold [AU]')
    plt.ylabel('Counts')
    plt.legend(loc=0)
    plt.savefig("pixel_a0_" + str(pixel) + ".png")
